{
  "$schema": "https://getcomposer.org/schema.json",
  "name": "loomkit/starter",
  "type": "project",
  "description": "The Loom Starter Kit \ud83d\ude80",
  "keywords": [
    "boilerplate",
    "laravel",
    "loom",
    "loomkit",
    "php",
    "skeleton",
    "starter",
    "starter-kit"
  ],
  "license": "MIT",
  "require": {
    "php": "^8.3",
    "filament/filament": "^4.0",
    "loomkit/loom": "^0.0.0",
    "sikessem/framework": "^0.10.0",
    "spatie/laravel-permission": "^6.21"
  },
  "require-dev": {
    "sikessem/laravel-devtools": "^1.4"
  },
  "autoload": {
    "psr-4": {
      "App\\": "app/",
      "Database\\Factories\\": "database/factories/",
      "Database\\Seeders\\": "database/seeders/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "Tests\\": "tests/"
    }
  },
  "scripts": {
    "post-autoload-dump": [
      "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
      "@php artisan package:discover --ansi",
      "@php artisan filament:upgrade"
    ],
    "post-update-cmd": [
      "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
    ],
    "post-root-package-install": [
      "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
    ],
    "post-create-project-cmd": [
      "@php artisan key:generate --ansi",
      "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
      "@php artisan migrate --graceful --ansi"
    ],
    "check": "phpstan analyse --ansi",
    "dev": [
      "Composer\\Config::disableProcessTimeout",
      "bunx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"bun dev\" --names=server,queue,logs,vite --kill-others"
    ],
    "lint": "pint -v",
    "prod": ["@php artisan optimize:clear", "@php artisan optimize"],
    "test": ["@php artisan config:clear --ansi", "@php artisan test"]
  },
  "extra": {
    "laravel": {
      "dont-discover": []
    },
    "branch-alias": {
      "dev-main": "0.x-dev"
    }
  },
  "config": {
    "optimize-autoloader": true,
    "preferred-install": "dist",
    "sort-packages": true,
    "allow-plugins": {
      "dealerdirect/phpcodesniffer-composer-installer": true,
      "pestphp/pest-plugin": true,
      "php-http/discovery": true
    }
  },
  "minimum-stability": "stable",
  "prefer-stable": true
}
